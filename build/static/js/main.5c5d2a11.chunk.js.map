{"version":3,"sources":["UserContext.js","NavBar.js","components/Home.js","components/CreateAccount.js","components/Login.js","components/Deposit.js","components/Withdraw.js","components/AllData.js","Spa.js","index.js"],"names":["UserContext","createContext","userReducer","state","action","type","users","payload","loggedInUser","balance","UserProvider","children","useReducer","name","email","password","value","dispatch","Provider","useUsers","useContext","NavBar","Consumer","className","href","title","src","alt","width","height","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Home","message","Card","style","Body","Title","Text","Img","CreateAccount","useState","show","setShow","showForm","setShowForm","status","setStatus","setName","setEmail","setPassword","validate","field","label","undefined","setTimeout","test","filter","item","length","alert","Form","onSubmit","event","preventDefault","console","log","Group","controlId","Label","Control","placeholder","onChange","target","Button","variant","onClick","Login","showStatus","setShowStatus","user","useEffect","currentTarget","ATMDeposit","isValid","disabled","Deposit","deposit","setDeposit","validTransaction","setValidTransaction","Number","to","ATMWithdraw","margin","Withdraw","withdraw","setWithdraw","AllData","Table","striped","bordered","hover","map","i","scope","Spa","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c5d2a11.chunk.js","sourcesContent":["\r\nimport { createContext, useReducer, useContext } from 'react';\r\n\r\nconst UserContext = createContext(null);\r\nconst userReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'create_account':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.payload]\r\n            }\r\n\r\n        case 'login':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.payload\r\n            }\r\n\r\n        case 'deposit':\r\n            return {\r\n\r\n                ...state,\r\n                loggedInUser: {\r\n                    ...state.loggedInUser,\r\n                    balance: state.loggedInUser.balance + action.payload,\r\n                    // balance: state.users.balance + action.payload\r\n                }\r\n            }\r\n        case 'withdraw':\r\n            return {\r\n                ...state,\r\n                loggedInUser: {\r\n                    ...state.loggedInUser,\r\n                    balance: state.loggedInUser.balance - action.payload,\r\n                    // balance: state.users.balance - action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(userReducer, {\r\n        loggedInUser: null,\r\n        users: [\r\n            { name: 'Ivana', email: 'ivana.cliffords@gmail.com', password: 'password', balance: 100 }\r\n        ]\r\n    });\r\n    const value = { state, dispatch };\r\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\r\n\r\n}\r\nconst useUsers = () => {\r\n    const context = useContext(UserContext);\r\n    return context;\r\n}\r\n\r\nexport { UserProvider, useUsers, UserContext };","import React from 'react';\r\nimport { UserContext } from './UserContext.js';\r\n\r\nfunction NavBar() {\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n            {(state) => (\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <a className=\"navbar-brand\" href=\"#\" title=\"You probably want to choose another bank\" >\r\n                        <img src=\"bank.png\" alt=\"bad bank logo\" width=\"24\" height=\"24\" />\r\n                        Bad Bank\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" title=\"You can create your account\" href=\"#/createaccount/\">Create Account</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" title=\"You can login\" href=\"#/login/\">Login</a>\r\n                            </li>\r\n                            {/* {state.loggedInUser && ( */}\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" title=\"Deposit money into your account\" href=\"#/deposit/\">Deposit</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" title=\"Withdraw money from your account\" href=\"#/withdraw/\">Withdraw</a>\r\n                                </li>\r\n                            </>\r\n                            {/* )} */}\r\n\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" title=\"Users and their information\" href=\"#/alldata/\">AllData</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )}\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\nexport default NavBar;","import { useUsers } from '../UserContext';\r\nimport { Card } from 'react-bootstrap';\r\nfunction Home() {\r\n\r\n    const { state } = useUsers();\r\n    let message;\r\n\r\n    if (state.loggedInUser === null) {\r\n        message = (\r\n            <div>\r\n                You are not logged in.\r\n            </div>\r\n        );\r\n    } else {\r\n        message = (\r\n            <div>\r\n                Welcome back {state.loggedInUser.name}!\r\n                <br />\r\n                Your balance is ${state.loggedInUser.balance}.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card style={{ width: '20em' }} className=\"card-style\">\r\n                <Card.Body>\r\n                    <Card.Title>Bad Bank</Card.Title>\r\n                    <hr />\r\n                    <Card.Text>\r\n                        <p className=\"home-p\">You probably don't want to do business with us.</p>\r\n                        <hr />\r\n                        {message}\r\n                    </Card.Text>\r\n\r\n                </Card.Body>\r\n                <Card.Img src=\"bank.png\" style={{ width: '15rem' }} className=\"home-image\" />\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useUsers } from '../UserContext';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\n\r\nfunction CreateAccount() {\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [showForm, setShowForm] = useState(true);\r\n    const [status, setStatus] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n\r\n    const { state, dispatch } = useUsers();\r\n\r\n\r\n    function validate(field, label) {\r\n        if (field === undefined) {\r\n            setStatus('Error: ' + label);\r\n            setTimeout(() => setStatus(''), 3000);\r\n            return false;\r\n        }\r\n\r\n        if (!field === (/^\\d+$/.test(field))) {\r\n            setStatus('Error input can only contain numbers.');\r\n            setTimeout(() => setStatus(''), 3000);\r\n\r\n        }\r\n\r\n        if (label === 'email') {\r\n            if (state.users.filter((item) => item.email === field).length > 0) {\r\n                alert('Error: This email is already in use');\r\n                setStatus('Error: This email is already in use');\r\n\r\n                return false;\r\n            }\r\n            if (!email) {\r\n                alert('Error: Must fill in an email');\r\n                setStatus('Error: Must fill in an email');\r\n\r\n                return false;\r\n\r\n            }\r\n        }\r\n        if (label === 'name') {\r\n            if (!name) {\r\n                alert('Error: Must fill in a name');\r\n                setStatus('Error: Must fill in a name');\r\n                return false;\r\n            }\r\n        }\r\n        if (label === 'password') {\r\n            if (password.length < 8) {\r\n                alert('Password must be at least 8 characters long!');\r\n                setStatus('Password must be at least 8 characters long!');\r\n                return false;\r\n            }\r\n        }\r\n        setStatus(\"Success!!\")\r\n\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    function handleCreate(event) {\r\n        event.preventDefault();\r\n\r\n        console.log('Name: ', name);\r\n        console.log('Email: ', email);\r\n        console.log('Password: ', password);\r\n\r\n        if (!validate(name, 'name')) {\r\n            setShow(true);\r\n            return;\r\n        };\r\n        if (!validate(email, 'email')) {\r\n            setShow(true);\r\n            return;\r\n        };\r\n        if (!validate(password, 'password')) {\r\n            setShow(true);\r\n            return;\r\n        };\r\n\r\n        // context.users.push({ name: name, email: email, password: password, balance: 100 });\r\n        dispatch({\r\n            type: 'create_account',\r\n            payload: { name, email, password, balance: 100 }\r\n        })\r\n\r\n        setShow(true);\r\n        setShowForm(false);\r\n        clearForm();\r\n    }\r\n\r\n    function clearForm() {\r\n        setShow(false);\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card\r\n                style={{ width: '20rem' }}\r\n                className=\"card-style\"\r\n            >\r\n                <Card.Body>\r\n\r\n\r\n\r\n                    <Card.Title>Create Account</Card.Title>\r\n                    <hr />\r\n                    {showForm ? (\r\n                        <>\r\n                            <Form onSubmit={handleCreate}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter your name\"\r\n                                        value={name} onChange={(event) => setName(event.target.value)} />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Email address</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter your email\"\r\n                                        value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter your password\"\r\n                                        value={password} onChange={(event) => setPassword(event.target.value)} />\r\n                                </Form.Group>\r\n\r\n                                {show && <p> {status} </p>}\r\n\r\n                                <Button variant=\"dark\" type=\"submit\">\r\n                                    Create Account\r\n                                </Button>\r\n\r\n                            </Form>\r\n\r\n\r\n\r\n\r\n\r\n                        </>\r\n\r\n                    ) : (\r\n                        <>\r\n                            <hr />\r\n                            <h5>Success!! Account created!</h5>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={() => setShowForm(true)}>\r\n                                Add another Account\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default CreateAccount;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { useUsers } from '../UserContext.js';\r\n\r\n\r\nfunction Login() {\r\n    const { state, dispatch } = useUsers();\r\n    const [status, setStatus] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showStatus, setShowStatus] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!state.user) {\r\n            alert('You have to have an account before you can log in.');\r\n        }\r\n    }, [state.user]);\r\n\r\n\r\n\r\n    function validate(field, label) {\r\n\r\n        const user = state.users.filter(user => email === user.email);\r\n\r\n        if (field === undefined) {\r\n            setStatus('Error: ' + label);\r\n            setTimeout(() => setStatus(''), 3000);\r\n            setShowStatus(true);\r\n\r\n\r\n            return false;\r\n        }\r\n        if (!user) {\r\n            setStatus('No account with this email');\r\n            setTimeout(() => setStatus(''), 3000);\r\n            setShowStatus(true);\r\n\r\n            return false;\r\n        }\r\n        if (password !== user[0].password) {\r\n            setStatus('No user with this password');\r\n            setTimeout(() => setStatus(''), 3000);\r\n            setShowStatus(true);\r\n\r\n            return false;\r\n        }\r\n\r\n        setStatus('Successful login!')\r\n        setShowStatus(true);\r\n        setTimeout(() => setShowStatus(false), 3000);\r\n        clearForm();\r\n\r\n        return true;\r\n    }\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n        console.log(email, password);\r\n        if (!validate(email, 'email')) return;\r\n        if (!validate(password, 'password')) return;\r\n        const loggedInUser = state.users.filter(user => email === user.email)[0];\r\n\r\n        dispatch({\r\n            type: 'login',\r\n            payload: loggedInUser\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function clearForm() {\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Card\r\n                style={{ width: '20rem' }}\r\n                className=\"card-style\"\r\n            >\r\n                <Card.Body>\r\n\r\n                    <Card.Title>Login</Card.Title>\r\n                    <hr />\r\n                    <>\r\n                        <Form\r\n                            onSubmit={handleLogin}>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter your email\"\r\n                                    value={email}\r\n                                    onChange={event => setEmail(event.currentTarget.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter your password\"\r\n                                    value={password} onChange={event => setPassword(event.currentTarget.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                type=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                            {showStatus && <p>{status}</p>}\r\n                        </Form>\r\n                    </>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, Form, } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useUsers } from '../UserContext.js';\r\n\r\n\r\nfunction ATMDeposit({ onChange, isValid }) {\r\n    return (\r\n        <label className=\"label huge\"><br />\r\n            <p>Please enter the ammount</p>\r\n            <input className=\"ammount-input\" type=\"number\" width=\"200\" placeholder=\"$0\" onChange={onChange}></input>\r\n            <br />\r\n            <input type=\"submit\" disabled={!isValid} value=\"Submit\"></input>\r\n\r\n        </label >\r\n    );\r\n};\r\n\r\n\r\nfunction Deposit() {\r\n    const [deposit, setDeposit] = useState(0);\r\n    // const [isDeposit, setIsDeposit] = useState(true);\r\n    const [validTransaction, setValidTransaction] = useState(false);\r\n    const { state, dispatch } = useUsers();\r\n\r\n    useEffect(() => {\r\n        if (!state.loggedInUser) {\r\n            alert('You have to be logged in to make deposits.');\r\n        }\r\n    }, [state.loggedInUser]);\r\n\r\n\r\n    function handleChange(event) {\r\n\r\n        if (Number(event.target.value) < 0) {\r\n            alert('Negative deposit is not allowed');\r\n            event.target.value = 0;\r\n            return setValidTransaction(false);\r\n        }\r\n        if (Number(event.target.value) <= 0) {\r\n            return setValidTransaction(false);\r\n        }\r\n        else {\r\n            setValidTransaction(true);\r\n        }\r\n        setDeposit(Number(event.target.value));\r\n    };\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            type: 'deposit',\r\n            payload: deposit\r\n        })\r\n        setValidTransaction(false);\r\n        alert('Success, your deposit will be added to your balance!');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!state.loggedInUser ? (\r\n                <Redirect\r\n                    to='/login'\r\n                />\r\n\r\n            ) : (\r\n\r\n                <Card\r\n                    style={{ width: '20rem' }}\r\n                    className=\"card-style\"\r\n                >\r\n                    <Card.Body>\r\n                        <Card.Title>Deposit</Card.Title>\r\n                        <hr />\r\n                        <>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <>\r\n\r\n                                    <h2 id=\"total\">Account Balance ${state.loggedInUser.balance}</h2>\r\n                                    <ATMDeposit\r\n                                        onChange={handleChange}\r\n                                        // isDeposit={isDeposit}\r\n                                        isValid={validTransaction}\r\n                                    ></ATMDeposit>\r\n\r\n\r\n                                </>\r\n                            </Form>\r\n                        </>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            )\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Deposit;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useUsers } from '../UserContext';\r\n\r\n\r\nfunction ATMWithdraw({ onChange, isValid }) {\r\n\r\n    return (\r\n        <label className=\"label\"><br />\r\n            <p>Please enter the ammount</p>\r\n            <input className=\"ammount-input\" type=\"number\" width=\"200\" placeholder=\"$0\" onChange={onChange}></input>\r\n            <input type=\"submit\" disabled={!isValid} width=\"200\" margin=\"10\" variant=\"dark\" value=\"Submit\" id=\"submit-input\"></input>\r\n        </label>\r\n    );\r\n};\r\n\r\nfunction Withdraw() {\r\n    const [withdraw, setWithdraw] = useState(0);\r\n    const [validTransaction, setValidTransaction] = useState(false);\r\n    const { state, dispatch } = useUsers();\r\n\r\n    useEffect(() => {\r\n        if (!state.loggedInUser) {\r\n            alert('You have to be logged in to make withdrawal.');\r\n        }\r\n    }, [state.loggedInUser]);\r\n\r\n\r\n\r\n    function handleChange(event) {\r\n\r\n        if (Number(event.target.value) < 0) {\r\n            alert('Negative withdrawal is not allowed.');\r\n            event.target.value = 0;\r\n        }\r\n        if (Number(event.target.value) > state.loggedInUser.balance) {\r\n            alert('Insufficient funds.');\r\n            return setValidTransaction(false);\r\n        }\r\n        if (Number(event.target.value) <= 0) {\r\n            return setValidTransaction(false);\r\n        }\r\n        else {\r\n            setValidTransaction(true);\r\n        }\r\n        setWithdraw(Number(event.target.value));\r\n    };\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            type: 'withdraw',\r\n            payload: withdraw\r\n        })\r\n        setValidTransaction(false);\r\n        alert('Success, your withdrawal will be deducted from your Balance');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!state.loggedInUser ? (\r\n                <Redirect\r\n                    to='/login'\r\n                />\r\n\r\n            ) : (\r\n                <Card\r\n                    style={{ width: '20rem' }}\r\n                    className=\"card-style\"\r\n                >\r\n                    <Card.Body>\r\n                        <Card.Title>Withdraw</Card.Title>\r\n                        <hr />\r\n                        <>\r\n\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <>\r\n                                    <h2 id=\"total\">Account Balance ${state.loggedInUser.balance}</h2>\r\n\r\n                                    <ATMWithdraw\r\n                                        onChange={handleChange}\r\n                                        isValid={validTransaction}\r\n\r\n\r\n                                    ></ATMWithdraw>\r\n\r\n                                </>\r\n                            </Form>\r\n                        </>\r\n                    </Card.Body>\r\n                </Card >\r\n\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Withdraw;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport { useUsers } from '../UserContext.js';\r\n\r\nfunction AllData() {\r\n    const { state } = useUsers();\r\n\r\n\r\n    console.log(state.users);\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: '60rem' }}\r\n            className=\"card-style\">\r\n            <Card.Body>\r\n                <Card.Title>All Data</Card.Title>\r\n                <hr />\r\n\r\n                <Table\r\n                    striped bordered hover variant=\"dark\"\r\n                    className=\"table\"\r\n\r\n                >\r\n\r\n                    < tbody >\r\n\r\n                        {\r\n                            state.users.map((item, i) => {\r\n                                return (\r\n\r\n                                    <tr key={i + 1}>\r\n\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.password}</td>\r\n\r\n\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n\r\n                </Table>\r\n            </Card.Body >\r\n        </Card >\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AllData;","\nimport { Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './NavBar.js';\nimport Home from './components/Home.js';\nimport CreateAccount from './components/CreateAccount.js';\nimport Login from './components/Login.js';\nimport Deposit from './components/Deposit.js';\nimport Withdraw from './components/Withdraw.js';\nimport AllData from './components/AllData.js';\nimport { UserProvider } from './UserContext.js';\n\n\nfunction Spa() {\n  return (\n    <UserProvider>\n      <HashRouter>\n        <NavBar />\n        <Route path='/' exact component={Home} />\n        <Route path='/createaccount' component={CreateAccount} />\n        <Route path='/login' component={Login} />\n        <Route path='/deposit' component={Deposit} />\n        <Route path='/withdraw' component={Withdraw} />\n        <Route path='/alldata' component={AllData} />\n      </HashRouter>\n    </UserProvider>\n  );\n}\n\nexport default Spa;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Spa from './Spa';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Spa />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}